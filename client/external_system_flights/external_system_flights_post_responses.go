// Code generated by go-swagger; DO NOT EDIT.

package external_system_flights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/odch/go-capzlog/models"
)

// ExternalSystemFlightsPostReader is a Reader for the ExternalSystemFlightsPost structure.
type ExternalSystemFlightsPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExternalSystemFlightsPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExternalSystemFlightsPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExternalSystemFlightsPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/pel/public/externalsystemflights] ExternalSystemFlights_Post", response, response.Code())
	}
}

// NewExternalSystemFlightsPostOK creates a ExternalSystemFlightsPostOK with default headers values
func NewExternalSystemFlightsPostOK() *ExternalSystemFlightsPostOK {
	return &ExternalSystemFlightsPostOK{}
}

/*
ExternalSystemFlightsPostOK describes a response with status code 200, with default header values.

ExternalSystemFlightsPostOK external system flights post o k
*/
type ExternalSystemFlightsPostOK struct {
	Payload *models.ExternalSystemFlightOutput
}

// IsSuccess returns true when this external system flights post o k response has a 2xx status code
func (o *ExternalSystemFlightsPostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this external system flights post o k response has a 3xx status code
func (o *ExternalSystemFlightsPostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this external system flights post o k response has a 4xx status code
func (o *ExternalSystemFlightsPostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this external system flights post o k response has a 5xx status code
func (o *ExternalSystemFlightsPostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this external system flights post o k response a status code equal to that given
func (o *ExternalSystemFlightsPostOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the external system flights post o k response
func (o *ExternalSystemFlightsPostOK) Code() int {
	return 200
}

func (o *ExternalSystemFlightsPostOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/pel/public/externalsystemflights][%d] externalSystemFlightsPostOK %s", 200, payload)
}

func (o *ExternalSystemFlightsPostOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/pel/public/externalsystemflights][%d] externalSystemFlightsPostOK %s", 200, payload)
}

func (o *ExternalSystemFlightsPostOK) GetPayload() *models.ExternalSystemFlightOutput {
	return o.Payload
}

func (o *ExternalSystemFlightsPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalSystemFlightOutput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExternalSystemFlightsPostBadRequest creates a ExternalSystemFlightsPostBadRequest with default headers values
func NewExternalSystemFlightsPostBadRequest() *ExternalSystemFlightsPostBadRequest {
	return &ExternalSystemFlightsPostBadRequest{}
}

/*
ExternalSystemFlightsPostBadRequest describes a response with status code 400, with default header values.

ExternalSystemFlightsPostBadRequest external system flights post bad request
*/
type ExternalSystemFlightsPostBadRequest struct {
	Payload string
}

// IsSuccess returns true when this external system flights post bad request response has a 2xx status code
func (o *ExternalSystemFlightsPostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this external system flights post bad request response has a 3xx status code
func (o *ExternalSystemFlightsPostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this external system flights post bad request response has a 4xx status code
func (o *ExternalSystemFlightsPostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this external system flights post bad request response has a 5xx status code
func (o *ExternalSystemFlightsPostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this external system flights post bad request response a status code equal to that given
func (o *ExternalSystemFlightsPostBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the external system flights post bad request response
func (o *ExternalSystemFlightsPostBadRequest) Code() int {
	return 400
}

func (o *ExternalSystemFlightsPostBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/pel/public/externalsystemflights][%d] externalSystemFlightsPostBadRequest %s", 400, payload)
}

func (o *ExternalSystemFlightsPostBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/pel/public/externalsystemflights][%d] externalSystemFlightsPostBadRequest %s", 400, payload)
}

func (o *ExternalSystemFlightsPostBadRequest) GetPayload() string {
	return o.Payload
}

func (o *ExternalSystemFlightsPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
